"""update contracts and plans

Revision ID: 300a0b18ed09
Revises: 6a3209212dd8
Create Date: 2025-04-01 18:06:59.147933

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "300a0b18ed09"
down_revision: Union[str, None] = "6a3209212dd8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "product_contracts",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("product_uuid", sa.UUID(), nullable=False),
        sa.Column("contract_uuid", sa.UUID(), nullable=False),
        sa.Column("accepted_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["contract_uuid"],
            ["contracts.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["product_uuid"],
            ["products.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.add_column(
        "customer_product_contracts",
        sa.Column("product_customer_uuid", sa.UUID(), nullable=False),
    )
    op.add_column(
        "customer_product_contracts",
        sa.Column("contract_uuid", sa.UUID(), nullable=False),
    )
    op.drop_constraint(
        "customer_product_contracts_products_customer_uuid_fkey",
        "customer_product_contracts",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "customer_product_contracts",
        "customer_products",
        ["product_customer_uuid"],
        ["uuid"],
    )
    op.create_foreign_key(
        None,
        "customer_product_contracts",
        "contracts",
        ["contract_uuid"],
        ["uuid"],
    )
    op.drop_column("customer_product_contracts", "products_customer_uuid")
    op.add_column(
        "customers", sa.Column("phone_number", sa.String(), nullable=True)
    )
    op.add_column(
        "product_plans",
        sa.Column("recurring_month", sa.Integer(), nullable=True),
    )
    op.drop_column("product_plans", "seat_based")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "product_plans",
        sa.Column(
            "seat_based", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
    )
    op.drop_column("product_plans", "recurring_month")
    op.drop_column("customers", "phone_number")
    op.add_column(
        "customer_product_contracts",
        sa.Column(
            "products_customer_uuid",
            sa.UUID(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(None, "customer_product_contracts", type_="foreignkey")
    op.drop_constraint(None, "customer_product_contracts", type_="foreignkey")
    op.create_foreign_key(
        "customer_product_contracts_products_customer_uuid_fkey",
        "customer_product_contracts",
        "customer_products",
        ["products_customer_uuid"],
        ["uuid"],
    )
    op.drop_column("customer_product_contracts", "contract_uuid")
    op.drop_column("customer_product_contracts", "product_customer_uuid")
    op.drop_table("product_contracts")
    # ### end Alembic commands ###
