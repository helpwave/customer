"""update user

Revision ID: dd668571894a
Revises: 473e84b6c8b9
Create Date: 2025-03-06 20:25:57.607832

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "dd668571894a"
down_revision: Union[str, None] = "473e84b6c8b9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "customers", "name", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "customers", "email", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "customers", "address", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "customers", "house_number", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "customers", "postal_code", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "customers", "city", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "customers", "country", existing_type=sa.VARCHAR(), nullable=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "customers", "country", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "customers", "city", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "customers", "postal_code", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "customers", "house_number", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "customers", "address", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "customers", "email", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "customers", "name", existing_type=sa.VARCHAR(), nullable=True
    )
    # ### end Alembic commands ###
